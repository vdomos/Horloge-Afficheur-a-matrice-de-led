= Horloge-Afficheur a matrice de led
:toc:

== Description

Le but de ce montage, c'est de faire une horloge évoluée qui permet d'afficher des informations supplémentaires comme la t° intérieure/extérieure, la pluviomètrie ou un message quelconque défilant.

Cette version utilise un Afficheur à matrice de leds SURE 32x8 (http://store.sure-electronics.com/de-dp13119) piloté par un Arduino + Ethernet Schield ou Arduino Ethernet Pro.

image::images/DE-DP13212_6_b.jpg[caption="", title="", alt="", width="400", link="images/DE-DP13212_2_b.jpg"]
image::images/DE-DP13212_4_b.jpg[caption="", title="", alt="", width="400", link="images/DE-DP13212_4_b.jpg"]

Ce montage est basé sur un Arduino + Ethernet Schield ou Arduino Pro relié à un afficheur à matrice de led SURE à base de chip HT1632.
Pour gérer cet afficheur, il y a une librairie de disponible sur Github: https://github.com/gauravmm/HT1632-for-Arduino

Il y a eu une mise à jour de la lib que je n'ai pas testé depuis, donc à voir si fonctionnement identique.
La lib que j'utlise est disponible dans  link:src/Arduino_Lib_HT1632.tgz[HT1632 Lib Arduino]

---------------------------------------------------------------------------------------------------
$ git clone https://github.com/gauravmm/HT1632-for-Arduino.git
---------------------------------------------------------------------------------------------------

Cette librairie fourni une police de caractère qui n'exploite pas la totalité de l'afficheur. 
J'ai fourni une police au format 5x7 qui exploite toute la hauteur de l'afficheur.

L'afficheur est prévu pour fonctionner en autonome comme horloge. 
Au boot, l'Arduino prends une configuration IP par DHCP se connecte à un serveur NTP en local et 
si echec à un 2ième sur internet.
La boucle principale consiste à écouter sur un socket UDP pour afficher tout message reçu suivant un protocol défini ci-dessous ainsi 
que de l'affichage de l'heure à chaque minute.


== Cablage


=== L'afficheur
L'afficheur SURE nécessite 3 broches de données en plus de son alimentation en 5V.

=== LDR
Une LDR pour gérer la luminosité de l'afficheur en fonction de l'éclairage ambiant est connectée sur une broche analogique de l'Arduino.


=== Un buzzer
Un buzzer est relié à un port de l'Arduino pour signaler tout messages arrivant.
Une commande permet de jouer sur les temps entre beep simple ou double pour différencier différent signals.


=== Ports Arduino utlisés

---------------------------------------------------------------------------------------------------
BUZZERPIN    2		Pin => Buzzer => Gnd
LDR	    A0		Analog 0 => LDR
HT1632_CS1   5		Arduino Digital pin to Pin 3 HE-10 SURE Display (CS1)
HT1632_WR    6		Arduino Digital pin to Pin 5 HE-10 SURE Display (WR) 
HT1632_DATA  7		Arduino Digital pin to Pin 7 HE-10 SURE Display (DATA)
Gnd Arduino		Arduino Gnd to Pin 11 HE-10 SURE Display (Gnd)		
+5V Arduino		Arduino +5V to Pin 12 HE-10 SURE Display (+5V)		

PINs 10,11,12,13 et 4	Cablage I/O Ethernet Schield + (SD) 

---------------------------------------------------------------------------------------------------


== Protocole en réception utlisé

Il suffira qu'un client envoie un message UDP en respectant ce protocol pour afficher un texte ou emettre un beep:
---------------------------------------------------------------------------------------------------
	'Texte@'	: Texte aligné à gauche
	'Texte#'	: Texte centré
	'Texte*'	: Texte aligné à droite
	'300,20,100$'	: Double Beep: Beep 300ms, pause 20ms, Beep 100ms	
	'TexteLong%'  	: Défilement texte
	'140716095900!'	: Maj horloge locale 					
---------------------------------------------------------------------------------------------------


Sketch Arduino disponible ici:  link:src/disp32x8udp.ino[disp32x8udp.ino]

== Tests simples en ligne de commande Linux

Envoie d'un double beep:
---------------------------------------------------------------------------------------------------
$ echo "300,20,100$"  | nc -u -w1 192.168.0.125 8888
Ack
---------------------------------------------------------------------------------------------------

Envoie d'un message défilant:
---------------------------------------------------------------------------------------------------
$ echo  "Test afficheur Sure Display Arduino%" | nc -u -w1 192.168.0.125 8888
Ack
---------------------------------------------------------------------------------------------------


== Sortie debug sur port série de l'Arduino

---------------------------------------------------------------------------------------------------
$ picocom -b 115200 -d 8 -f n -p n /dev/arduino
picocom v1.7
...
Terminal ready

Init. Arduino Disp32x8 UDP V20140712 ...
Info. protocole en réception:
'Texte@': Texte aligné à gauche
'Texte#': Texte centré
'Texte*': Texte aligné à droite
'300,20,100$': Double Beep: Beep 300ms, pause 20ms, Beep 100ms	
'TexteLong%': Défilement texte
'140716095900!': Maj horloge locale 					

Init. ethernet ...
Arduino is at 192.168.0.125
Fin init. Arduino.

Received packet of size 7 from 192.168.0.4, port 54851
Contents: 18:15#
ExeCcmd: 18:15#
Send response Ack

Received packet of size 39 from 192.168.0.4, port 54851
Contents: Attention porte garage restee ouverte%
ExeCcmd: Attention porte garage restee ouverte%
Send response Ack

Received packet of size 9 from 192.168.0.4, port 54851
Contents: -17.8°*
ExeCcmd: -17.8&*
Send response Ack

---------------------------------------------------------------------------------------------------


=== Photos du montage

image:images/HorlogeAfficheurMatriceLed_ph1.jpg[caption="", title="Vue de l'arduino ethernet au dos de l'afficheur", alt="", width="500", link="images/HorlogeAfficheurMatriceLed_ph1.jpg"]
{nbsp}

image:images/HorlogeAfficheurMatriceLed_ph1.jpg[caption="", title="", alt="", width="500", link="images/HorlogeAfficheurMatriceLed_ph1.jpg"]



=== Vidéo
Vue de l'afficheur en fonctionnement avec défilement de messages: 

link:http://www.youtube.com/watch?v=1BIM9ogc6E4[Horloge-Afficheur a matrice de led]

{nbsp}

'''
~20/7/2014~
